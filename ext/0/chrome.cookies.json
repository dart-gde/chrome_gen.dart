{"dependencies":[{"kind":"library","id":"chrome.src.common_exp","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ChromeApi","id":"ChromeApi","comment":"\nA common super class for the Chrome APIs.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","comment":"\nReturns true if the API is available. The common causes of an API not being\navilable are:\n\n * a permission is missing in the application's manifest.json file\n * the API is defined on a newer version of Chrome then the current runtime\n","line":"40"}],"line":"32"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"ChromeObject","id":"ChromeObject","comment":"\nThe abstract superclass of objects that can hold [JsObject] proxies.\n","children":[{"returnType":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"method","name":"toJs","id":"toJs0()","line":"24"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"26"},{"isFinal":true,"kind":"variable","name":"jsProxy","id":"jsProxy","line":"10"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreate a new instance of a `ChromeObject`, which creates and delegates to\na JsObject proxy.\n","line":"16"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","comment":"\nCreate a new instance of a `ChromeObject`, which delegates to the given\nJsObject proxy.\n","children":[{"initializedField":{"name":"jsProxy","refId":"chrome.src.common_exp/ChromeObject/jsProxy"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"22"}],"line":"9"}],"uri":"file:///home/ubuntu/src/github.com/dart-gde/chrome_gen.dart/lib/src/common_exp.dart","line":"2"},{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","id":"chrome.cookies","comment":"\nUse the `chrome.cookies` API to query and modify cookies, and to be notified\nwhen they change.\n","children":[{"returnType":{"name":"CookieStore","refId":"chrome.cookies/CookieStore"},"kind":"method","name":"_createCookieStore","id":"_createCookieStore1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"434"},{"returnType":{"name":"Cookie","refId":"chrome.cookies/Cookie"},"kind":"method","name":"_createCookie","id":"_createCookie1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"433"},{"ref":{"name":"ChromeCookies","refId":"chrome.cookies/ChromeCookies"},"isFinal":true,"kind":"variable","name":"cookies","id":"cookies","comment":"\nAccessor for the `chrome.cookies` namespace.\n","line":"14"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"CookiesRemoveParams","id":"CookiesRemoveParams","children":[{"isSetter":true,"kind":"method","name":"url=","id":"url=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"416"},{"isSetter":true,"kind":"method","name":"name=","id":"name=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"422"},{"isSetter":true,"kind":"method","name":"storeId=","id":"storeId=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"430"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"url","id":"url","comment":"\nThe URL associated with the cookie. If host permissions for this URL are\nnot specified in the manifest file, the API call will fail.\n","line":"415"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nThe name of the cookie to remove.\n","line":"421"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"storeId","id":"storeId","comment":"\nThe ID of the cookie store to look in for the cookie. If unspecified, the\ncookie is looked for by default in the current execution context's cookie\nstore.\n","line":"429"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"url","id":"url"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"storeId","id":"storeId"}],"line":"404"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"409"}],"line":"403"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"CookiesSetParams","id":"CookiesSetParams","children":[{"isSetter":true,"kind":"method","name":"url=","id":"url=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"349"},{"isSetter":true,"kind":"method","name":"name=","id":"name=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"355"},{"isSetter":true,"kind":"method","name":"value=","id":"value=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"361"},{"isSetter":true,"kind":"method","name":"domain=","id":"domain=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"368"},{"isSetter":true,"kind":"method","name":"path=","id":"path=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"374"},{"isSetter":true,"kind":"method","name":"secure=","id":"secure=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"380"},{"isSetter":true,"kind":"method","name":"httpOnly=","id":"httpOnly=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"386"},{"isSetter":true,"kind":"method","name":"expirationDate=","id":"expirationDate=1()","children":[{"kind":"param","name":"value","id":"value"}],"line":"393"},{"isSetter":true,"kind":"method","name":"storeId=","id":"storeId=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"400"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"url","id":"url","comment":"\nThe request-URI to associate with the setting of the cookie. This value can\naffect the default domain and path values of the created cookie. If host\npermissions for this URL are not specified in the manifest file, the API\ncall will fail.\n","line":"348"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nThe name of the cookie. Empty by default if omitted.\n","line":"354"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"\nThe value of the cookie. Empty by default if omitted.\n","line":"360"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"domain","id":"domain","comment":"\nThe domain of the cookie. If omitted, the cookie becomes a host-only\ncookie.\n","line":"367"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"path","id":"path","comment":"\nThe path of the cookie. Defaults to the path portion of the url parameter.\n","line":"373"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"secure","id":"secure","comment":"\nWhether the cookie should be marked as Secure. Defaults to false.\n","line":"379"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"httpOnly","id":"httpOnly","comment":"\nWhether the cookie should be marked as HttpOnly. Defaults to false.\n","line":"385"},{"kind":"property","name":"expirationDate","id":"expirationDate","comment":"\nThe expiration date of the cookie as the number of seconds since the UNIX\nepoch. If omitted, the cookie becomes a session cookie.\n","line":"392"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"storeId","id":"storeId","comment":"\nThe ID of the cookie store in which to set the cookie. By default, the\ncookie is set in the current execution context's cookie store.\n","line":"399"},{"kind":"constructor","name":"","id":"9()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"url","id":"url"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"value","id":"value"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"domain","id":"domain"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"secure","id":"secure"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"httpOnly","id":"httpOnly"},{"isOptional":true,"isNamed":true,"kind":"param","name":"expirationDate","id":"expirationDate"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"storeId","id":"storeId"}],"line":"329"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"340"}],"line":"328"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"CookiesGetAllParams","id":"CookiesGetAllParams","children":[{"isSetter":true,"kind":"method","name":"url=","id":"url=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"286"},{"isSetter":true,"kind":"method","name":"name=","id":"name=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"292"},{"isSetter":true,"kind":"method","name":"domain=","id":"domain=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"299"},{"isSetter":true,"kind":"method","name":"path=","id":"path=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"306"},{"isSetter":true,"kind":"method","name":"secure=","id":"secure=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"312"},{"isSetter":true,"kind":"method","name":"session=","id":"session=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"318"},{"isSetter":true,"kind":"method","name":"storeId=","id":"storeId=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"325"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"url","id":"url","comment":"\nRestricts the retrieved cookies to those that would match the given URL.\n","line":"285"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nFilters the cookies by name.\n","line":"291"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"domain","id":"domain","comment":"\nRestricts the retrieved cookies to those whose domains match or are\nsubdomains of this one.\n","line":"298"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"path","id":"path","comment":"\nRestricts the retrieved cookies to those whose path exactly matches this\nstring.\n","line":"305"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"secure","id":"secure","comment":"\nFilters the cookies by their Secure property.\n","line":"311"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"session","id":"session","comment":"\nFilters out session vs. persistent cookies.\n","line":"317"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"storeId","id":"storeId","comment":"\nThe cookie store to retrieve cookies from. If omitted, the current\nexecution context's cookie store will be used.\n","line":"324"},{"kind":"constructor","name":"","id":"7()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"url","id":"url"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"domain","id":"domain"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"secure","id":"secure"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"session","id":"session"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"storeId","id":"storeId"}],"line":"271"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"280"}],"line":"270"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"CookiesGetParams","id":"CookiesGetParams","children":[{"isSetter":true,"kind":"method","name":"url=","id":"url=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"254"},{"isSetter":true,"kind":"method","name":"name=","id":"name=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"260"},{"isSetter":true,"kind":"method","name":"storeId=","id":"storeId=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"267"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"url","id":"url","comment":"\nThe URL with which the cookie to retrieve is associated. This argument may\nbe a full URL, in which case any data following the URL path (e.g. the\nquery string) is simply ignored. If host permissions for this URL are not\nspecified in the manifest file, the API call will fail.\n","line":"253"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nThe name of the cookie to retrieve.\n","line":"259"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"storeId","id":"storeId","comment":"\nThe ID of the cookie store in which to look for the cookie. By default, the\ncurrent execution context's cookie store will be used.\n","line":"266"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"url","id":"url"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"storeId","id":"storeId"}],"line":"240"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"245"}],"line":"239"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"CookieStore","id":"CookieStore","comment":"\nRepresents a cookie store in the browser. An incognito mode window, for\ninstance, uses a separate cookie store from a non-incognito window.\n","children":[{"isSetter":true,"kind":"method","name":"id=","id":"id=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"230"},{"isSetter":true,"kind":"method","name":"tabIds=","id":"tabIds=1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"value","id":"value"}],"line":"236"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"id","id":"id","comment":"\nThe unique identifier for the cookie store.\n","line":"229"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"tabIds","id":"tabIds","comment":"\nIdentifiers of all the browser tabs that share this cookie store.\n","line":"235"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"id","id":"id"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"tabIds","id":"tabIds"}],"line":"220"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"224"}],"line":"219"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"Cookie","id":"Cookie","comment":"\nRepresents information about an HTTP cookie.\n","children":[{"isSetter":true,"kind":"method","name":"name=","id":"name=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"152"},{"isSetter":true,"kind":"method","name":"value=","id":"value=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"158"},{"isSetter":true,"kind":"method","name":"domain=","id":"domain=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"164"},{"isSetter":true,"kind":"method","name":"hostOnly=","id":"hostOnly=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"171"},{"isSetter":true,"kind":"method","name":"path=","id":"path=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"177"},{"isSetter":true,"kind":"method","name":"secure=","id":"secure=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"184"},{"isSetter":true,"kind":"method","name":"httpOnly=","id":"httpOnly=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"191"},{"isSetter":true,"kind":"method","name":"session=","id":"session=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"198"},{"isSetter":true,"kind":"method","name":"expirationDate=","id":"expirationDate=1()","children":[{"kind":"param","name":"value","id":"value"}],"line":"205"},{"isSetter":true,"kind":"method","name":"storeId=","id":"storeId=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"212"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nThe name of the cookie.\n","line":"151"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"\nThe value of the cookie.\n","line":"157"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"domain","id":"domain","comment":"\nThe domain of the cookie (e.g. \"www.google.com\", \"example.com\").\n","line":"163"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hostOnly","id":"hostOnly","comment":"\nTrue if the cookie is a host-only cookie (i.e. a request's host must\nexactly match the domain of the cookie).\n","line":"170"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"path","id":"path","comment":"\nThe path of the cookie.\n","line":"176"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"secure","id":"secure","comment":"\nTrue if the cookie is marked as Secure (i.e. its scope is limited to secure\nchannels, typically HTTPS).\n","line":"183"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"httpOnly","id":"httpOnly","comment":"\nTrue if the cookie is marked as HttpOnly (i.e. the cookie is inaccessible\nto client-side scripts).\n","line":"190"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"session","id":"session","comment":"\nTrue if the cookie is a session cookie, as opposed to a persistent cookie\nwith an expiration date.\n","line":"197"},{"kind":"property","name":"expirationDate","id":"expirationDate","comment":"\nThe expiration date of the cookie as the number of seconds since the UNIX\nepoch. Not provided for session cookies.\n","line":"204"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"storeId","id":"storeId","comment":"\nThe ID of the cookie store containing this cookie, as provided in\ngetAllCookieStores().\n","line":"211"},{"kind":"constructor","name":"","id":"10()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"value","id":"value"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"domain","id":"domain"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"hostOnly","id":"hostOnly"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"secure","id":"secure"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"httpOnly","id":"httpOnly"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"session","id":"session"},{"isOptional":true,"isNamed":true,"kind":"param","name":"expirationDate","id":"expirationDate"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"storeId","id":"storeId"}],"line":"134"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"146"}],"line":"133"},{"superclass":{"name":"ChromeApi","refId":"chrome.src.common_exp/ChromeApi"},"kind":"class","name":"ChromeCookies","id":"ChromeCookies","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Cookie","refId":"chrome.cookies/Cookie"}]},"kind":"method","name":"get","id":"get1()","comment":"\nRetrieves information about a single cookie. If more than one cookie of the\nsame name exists for the given URL, the one with the longest path will be\nreturned. For cookies with the same path length, the cookie with the\nearliest creation time will be returned.\n\n[details] Details to identify the cookie being retrieved.\n\nReturns:\nContains details about the cookie. This parameter is null if no such cookie\nwas found.\n","children":[{"ref":{"name":"CookiesGetParams","refId":"chrome.cookies/CookiesGetParams"},"kind":"param","name":"details","id":"details"}],"line":"35"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"chrome.cookies/Cookie"}]}]},"kind":"method","name":"getAll","id":"getAll1()","comment":"\nRetrieves all cookies from a single cookie store that match the given\ninformation.  The cookies returned will be sorted, with those with the\nlongest path first.  If multiple cookies have the same path length, those\nwith the earliest creation time will be first.\n\n[details] Information to filter the cookies being retrieved.\n\nReturns:\nAll the existing, unexpired cookies that match the given cookie info.\n","children":[{"ref":{"name":"CookiesGetAllParams","refId":"chrome.cookies/CookiesGetAllParams"},"kind":"param","name":"details","id":"details"}],"line":"54"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Cookie","refId":"chrome.cookies/Cookie"}]},"kind":"method","name":"set","id":"set1()","comment":"\nSets a cookie with the given cookie data; may overwrite equivalent cookies\nif they exist.\n\n[details] Details about the cookie being set.\n\nReturns:\nContains details about the cookie that's been set.  If setting failed for\nany reason, this will be \"null\", and \"chrome.runtime.lastError\" will be\nset.\n","children":[{"ref":{"name":"CookiesSetParams","refId":"chrome.cookies/CookiesSetParams"},"kind":"param","name":"details","id":"details"}],"line":"73"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Map","refId":"dart.core/Map"}]},"kind":"method","name":"remove","id":"remove1()","comment":"\nDeletes a cookie by name.\n\n[details] Information to identify the cookie to remove.\n\nReturns:\nContains details about the cookie that's been removed.  If removal failed\nfor any reason, this will be \"null\", and \"chrome.runtime.lastError\" will be\nset.\n","children":[{"ref":{"name":"CookiesRemoveParams","refId":"chrome.cookies/CookiesRemoveParams"},"kind":"param","name":"details","id":"details"}],"line":"91"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"CookieStore","refId":"chrome.cookies/CookieStore"}]}]},"kind":"method","name":"getAllCookieStores","id":"getAllCookieStores0()","comment":"\nLists all existing cookie stores.\n\nReturns:\nAll the existing cookie stores.\n","line":"105"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_throwNotAvailable","id":"_throwNotAvailable0()","isPrivate":true,"line":"125"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","line":"21"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Map","refId":"dart.core/Map"}]},"kind":"property","name":"onChanged","id":"onChanged","comment":"\nFired when a cookie is set or removed. As a special case, note that\nupdating a cookie's properties is implemented as a two step process: the\ncookie to be updated is first removed entirely, generating a notification\nwith \"cause\" of \"overwrite\" .  Afterwards, a new cookie is written with the\nupdated values, generating a second notification with \"cause\" \"explicit\".\n","line":"120"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_cookies","id":"_cookies","isPrivate":true,"line":"17"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"Map","refId":"dart.core/Map"}]},"isFinal":true,"kind":"variable","name":"_onChanged","id":"_onChanged","isPrivate":true,"line":"122"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"19"}],"line":"16"}],"uri":"file:///home/ubuntu/src/github.com/dart-gde/chrome_gen.dart/lib/gen/cookies.dart","line":"7"}