{"dependencies":[{"kind":"library","id":"chrome.src.common_exp","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ChromeApi","id":"ChromeApi","comment":"\nA common super class for the Chrome APIs.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","comment":"\nReturns true if the API is available. The common causes of an API not being\navilable are:\n\n * a permission is missing in the application's manifest.json file\n * the API is defined on a newer version of Chrome then the current runtime\n","line":"40"}],"line":"32"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"ChromeObject","id":"ChromeObject","comment":"\nThe abstract superclass of objects that can hold [JsObject] proxies.\n","children":[{"returnType":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"method","name":"toJs","id":"toJs0()","line":"24"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"26"},{"isFinal":true,"kind":"variable","name":"jsProxy","id":"jsProxy","line":"10"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreate a new instance of a `ChromeObject`, which creates and delegates to\na JsObject proxy.\n","line":"16"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","comment":"\nCreate a new instance of a `ChromeObject`, which delegates to the given\nJsObject proxy.\n","children":[{"initializedField":{"name":"jsProxy","refId":"chrome.src.common_exp/ChromeObject/jsProxy"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"22"}],"line":"9"}],"uri":"file:///home/ubuntu/src/github.com/dart-gde/chrome_gen.dart/lib/src/common_exp.dart","line":"2"},{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","id":"chrome.devtools","children":[{"returnType":{"name":"Button","refId":"chrome.devtools/Button"},"kind":"method","name":"_createButton","id":"_createButton1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"522"},{"returnType":{"name":"ExtensionSidebarPane","refId":"chrome.devtools/ExtensionSidebarPane"},"kind":"method","name":"_createExtensionSidebarPane","id":"_createExtensionSidebarPane1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"521"},{"returnType":{"name":"ExtensionPanel","refId":"chrome.devtools/ExtensionPanel"},"kind":"method","name":"_createExtensionPanel","id":"_createExtensionPanel1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"520"},{"returnType":{"name":"ElementsPanel","refId":"chrome.devtools/ElementsPanel"},"kind":"method","name":"_createElementsPanel","id":"_createElementsPanel1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"519"},{"returnType":{"name":"Request","refId":"chrome.devtools/Request"},"kind":"method","name":"_createRequest","id":"_createRequest1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"330"},{"returnType":{"name":"OnResourceContentCommittedEvent","refId":"chrome.devtools/OnResourceContentCommittedEvent"},"kind":"method","name":"_createOnResourceContentCommittedEvent","id":"_createOnResourceContentCommittedEvent2()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"resource","id":"resource"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"content","id":"content"}],"isPrivate":true,"line":"243"},{"returnType":{"name":"Resource","refId":"chrome.devtools/Resource"},"kind":"method","name":"_createResource","id":"_createResource1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"242"},{"ref":{"name":"ChromeDevtools","refId":"chrome.devtools/ChromeDevtools"},"isFinal":true,"kind":"variable","name":"devtools","id":"devtools","line":"7"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"Button","id":"Button","comment":"\nA button created by the extension.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"update","id":"update3()","comment":"\nUpdates the attributes of the button. If some of the arguments are omitted\nor `null`, the corresponding attributes are not updated.\n\n[iconPath] Path to the new icon of the button.\n\n[tooltipText] Text shown as a tooltip when user hovers the mouse over the\nbutton.\n\n[disabled] Whether the button is disabled.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"iconPath","id":"iconPath"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"tooltipText","id":"tooltipText"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"disabled","id":"disabled"}],"line":"514"},{"kind":"constructor","name":"","id":"0()","line":"500"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"501"}],"line":"499"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"ExtensionSidebarPane","id":"ExtensionSidebarPane","comment":"\nA sidebar created by the extension.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setHeight","id":"setHeight1()","comment":"\nSets the height of the sidebar.\n\n[height] A CSS-like size specification, such as `'100px'` or `'12ex'`.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"height","id":"height"}],"line":"452"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"setExpression","id":"setExpression2()","comment":"\nSets an expression that is evaluated within the inspected page. The result\nis displayed in the sidebar pane.\n\n[expression] An expression to be evaluated in context of the inspected\npage. JavaScript objects and DOM nodes are displayed in an expandable tree\nsimilar to the console/watch.\n\n[rootTitle] An optional title for the root of the expression tree.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"expression","id":"expression"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"rootTitle","id":"rootTitle"}],"line":"466"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"setObject","id":"setObject2()","comment":"\nSets a JSON-compliant object to be displayed in the sidebar pane.\n\n[jsonObject] An object to be displayed in context of the inspected page.\nEvaluated in the context of the caller (API client).\n\n[rootTitle] An optional title for the root of the expression tree.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"jsonObject","id":"jsonObject"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"rootTitle","id":"rootTitle"}],"line":"480"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setPage","id":"setPage1()","comment":"\nSets an HTML page to be displayed in the sidebar pane.\n\n[path] Relative path of an extension page to display within the sidebar.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"491"},{"kind":"constructor","name":"","id":"0()","line":"444"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"445"}],"line":"443"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"ExtensionPanel","id":"ExtensionPanel","comment":"\nRepresents a panel created by extension.\n","children":[{"returnType":{"name":"Button","refId":"chrome.devtools/Button"},"kind":"method","name":"createStatusBarButton","id":"createStatusBarButton3()","comment":"\nAppends a button to the status bar of the panel.\n\n[iconPath] Path to the icon of the button. The file should contain a\n64x24-pixel image composed of two 32x24 icons. The left icon is used when\nthe button is inactive; the right icon is displayed when the button is\npressed.\n\n[tooltipText] Text shown as a tooltip when user hovers the mouse over the\nbutton.\n\n[disabled] Whether the button is disabled.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"iconPath","id":"iconPath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"tooltipText","id":"tooltipText"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"disabled","id":"disabled"}],"line":"435"},{"kind":"constructor","name":"","id":"0()","line":"419"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"420"}],"line":"418"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"ElementsPanel","id":"ElementsPanel","comment":"\nRepresents the Elements panel.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ExtensionSidebarPane","refId":"chrome.devtools/ExtensionSidebarPane"}]},"kind":"method","name":"createSidebarPane","id":"createSidebarPane1()","comment":"\nCreates a pane within panel's sidebar.\n\n[title] Text that is displayed in sidebar caption.\n\nReturns:\nAn ExtensionSidebarPane object for created sidebar pane.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"title","id":"title"}],"line":"408"},{"kind":"constructor","name":"","id":"0()","line":"397"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"398"}],"line":"396"},{"superclass":{"name":"ChromeApi","refId":"chrome.src.common_exp/ChromeApi"},"kind":"class","name":"ChromeDevtoolsPanels","id":"ChromeDevtoolsPanels","comment":"\nUse the `chrome.devtools.panels` API to integrate your extension into\nDeveloper Tools window UI: create your own panels, access existing panels,\nand add sidebars.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ExtensionPanel","refId":"chrome.devtools/ExtensionPanel"}]},"kind":"method","name":"create","id":"create3()","comment":"\nCreates an extension panel.\n\n[title] Title that is displayed next to the extension icon in the Developer\nTools toolbar.\n\n[iconPath] Path of the panel's icon relative to the extension directory.\n\n[pagePath] Path of the panel's HTML page relative to the extension\ndirectory.\n\nReturns:\nAn ExtensionPanel object representing the created panel.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"title","id":"title"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"iconPath","id":"iconPath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"pagePath","id":"pagePath"}],"line":"363"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Resource","refId":"chrome.devtools/Resource"}]},"kind":"method","name":"setOpenResourceHandler","id":"setOpenResourceHandler0()","comment":"\nSpecifies the function to be called when the user clicks a resource link in\nthe Developer Tools window. To unset the handler, either call the method\nwith no parameters or pass null as the parameter.\n\nReturns:\nA [devtools.inspectedWindow.Resource] object for the resource that was\nclicked.\n","line":"380"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_throwNotAvailable","id":"_throwNotAvailable0()","isPrivate":true,"line":"388"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","line":"342"},{"ref":{"name":"ElementsPanel","refId":"chrome.devtools/ElementsPanel"},"kind":"property","name":"elements","id":"elements","comment":"\nElements panel.\n","line":"347"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_devtools_panels","id":"_devtools_panels","isPrivate":true,"line":"338"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"340"}],"line":"337"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"GetRequestContentResult","id":"GetRequestContentResult","comment":"\nThe return type for [getContent].\n","children":[{"returnType":{"name":"GetRequestContentResult","refId":"chrome.devtools/GetRequestContentResult"},"isStatic":true,"kind":"method","name":"_create","id":"_create2()","children":[{"kind":"param","name":"content","id":"content"},{"kind":"param","name":"encoding","id":"encoding"}],"isPrivate":true,"line":"320"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"content","id":"content","line":"324"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"encoding","id":"encoding","line":"325"},{"kind":"constructor","name":"_","id":"_2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"content","refId":"chrome.devtools/GetRequestContentResult/content"},"kind":"param","name":"content","id":"content"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"encoding","refId":"chrome.devtools/GetRequestContentResult/encoding"},"kind":"param","name":"encoding","id":"encoding"}],"isPrivate":true,"line":"327"}],"line":"319"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"Request","id":"Request","comment":"\nRepresents a network request for a document resource (script, image and so\non). See HAR Specification for reference.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"GetRequestContentResult","refId":"chrome.devtools/GetRequestContentResult"}]},"kind":"method","name":"getContent","id":"getContent0()","comment":"\nReturns content of the response body.\n\nReturns:\n[content] Content of the response body (potentially encoded).\n[encoding] Empty if content is not encoded, encoding name otherwise.\nCurrently, only base64 is supported.\n","line":"309"},{"kind":"constructor","name":"","id":"0()","line":"298"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"299"}],"line":"297"},{"superclass":{"name":"ChromeApi","refId":"chrome.src.common_exp/ChromeApi"},"kind":"class","name":"ChromeDevtoolsNetwork","id":"ChromeDevtoolsNetwork","comment":"\nUse the `chrome.devtools.network` API to retrieve the information about\nnetwork requests displayed by the Developer Tools in the Network panel.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"kind":"method","name":"getHAR","id":"getHAR0()","comment":"\nReturns HAR log that contains all known network requests.\n\nReturns:\nA HAR log. See HAR specification for details.\n","line":"263"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_throwNotAvailable","id":"_throwNotAvailable0()","isPrivate":true,"line":"288"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","line":"255"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Request","refId":"chrome.devtools/Request"}]},"kind":"property","name":"onRequestFinished","id":"onRequestFinished","comment":"\nFired when a network request is finished and all request data are\navailable.\n","line":"275"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"onNavigated","id":"onNavigated","comment":"\nFired when the inspected window navigates to a new page.\n","line":"283"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_devtools_network","id":"_devtools_network","isPrivate":true,"line":"251"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"Request","refId":"chrome.devtools/Request"}]},"isFinal":true,"kind":"variable","name":"_onRequestFinished","id":"_onRequestFinished","isPrivate":true,"line":"277"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"_onNavigated","id":"_onNavigated","isPrivate":true,"line":"285"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"253"}],"line":"250"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"GetResourceContentResult","id":"GetResourceContentResult","comment":"\nThe return type for [getContent].\n","children":[{"returnType":{"name":"GetResourceContentResult","refId":"chrome.devtools/GetResourceContentResult"},"isStatic":true,"kind":"method","name":"_create","id":"_create2()","children":[{"kind":"param","name":"content","id":"content"},{"kind":"param","name":"encoding","id":"encoding"}],"isPrivate":true,"line":"232"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"content","id":"content","line":"236"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"encoding","id":"encoding","line":"237"},{"kind":"constructor","name":"_","id":"_2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"content","refId":"chrome.devtools/GetResourceContentResult/content"},"kind":"param","name":"content","id":"content"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"encoding","refId":"chrome.devtools/GetResourceContentResult/encoding"},"kind":"param","name":"encoding","id":"encoding"}],"isPrivate":true,"line":"239"}],"line":"231"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"EvalResult","id":"EvalResult","comment":"\nThe return type for [eval].\n","children":[{"returnType":{"name":"EvalResult","refId":"chrome.devtools/EvalResult"},"isStatic":true,"kind":"method","name":"_create","id":"_create2()","children":[{"kind":"param","name":"result","id":"result"},{"kind":"param","name":"isException","id":"isException"}],"isPrivate":true,"line":"218"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"variable","name":"result","id":"result","line":"222"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"isException","id":"isException","line":"223"},{"kind":"constructor","name":"_","id":"_2()","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]},"initializedField":{"name":"result","refId":"chrome.devtools/EvalResult/result"},"kind":"param","name":"result","id":"result"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"isException","refId":"chrome.devtools/EvalResult/isException"},"kind":"param","name":"isException","id":"isException"}],"isPrivate":true,"line":"225"}],"line":"217"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"DevtoolsInspectedWindowReloadParams","id":"DevtoolsInspectedWindowReloadParams","children":[{"isSetter":true,"kind":"method","name":"ignoreCache=","id":"ignoreCache=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"193"},{"isSetter":true,"kind":"method","name":"userAgent=","id":"userAgent=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"202"},{"isSetter":true,"kind":"method","name":"injectedScript=","id":"injectedScript=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"211"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"ignoreCache","id":"ignoreCache","comment":"\nWhen true, the loader will ignore the cache for all inspected page\nresources loaded before the `load` event is fired. The effect is similar to\npressing Ctrl+Shift+R in the inspected window or within the Developer Tools\nwindow.\n","line":"192"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"userAgent","id":"userAgent","comment":"\nIf specified, the string will override the value of the `User-Agent` HTTP\nheader that's sent while loading the resources of the inspected page. The\nstring will also override the value of the `navigator.userAgent` property\nthat's returned to any scripts that are running within the inspected page.\n","line":"201"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"injectedScript","id":"injectedScript","comment":"\nIf specified, the script will be injected into every frame of the inspected\npage immediately upon load, before any of the frame's scripts. The script\nwill not be injected after subsequent reloads-for example, if the user\npresses Ctrl+R.\n","line":"210"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"ignoreCache","id":"ignoreCache"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"userAgent","id":"userAgent"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"injectedScript","id":"injectedScript"}],"line":"179"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"184"}],"line":"178"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"Resource","id":"Resource","comment":"\nA resource within the inspected page, such as a document, a script, or an\nimage.\n","children":[{"isSetter":true,"kind":"method","name":"url=","id":"url=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"141"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"GetResourceContentResult","refId":"chrome.devtools/GetResourceContentResult"}]},"kind":"method","name":"getContent","id":"getContent0()","comment":"\nGets the content of the resource.\n\nReturns:\n[content] Content of the resource (potentially encoded).\n[encoding] Empty if content is not encoded, encoding name otherwise.\nCurrently, only base64 is supported.\n","line":"151"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"kind":"method","name":"setContent","id":"setContent2()","comment":"\nSets the content of the resource.\n\n[content] New content of the resource. Only resources with the text type\nare currently supported.\n\n[commit] True if the user has finished editing the resource, and the new\ncontent of the resource should be persisted; false if this is a minor\nchange sent in progress of the user editing the resource.\n\nReturns:\nSet to undefined if the resource content was set successfully; describes\nerror otherwise.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"content","id":"content"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"commit","id":"commit"}],"line":"171"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"url","id":"url","comment":"\nThe URL of the resource.\n","line":"140"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"url","id":"url"}],"line":"132"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"135"}],"line":"131"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"OnResourceContentCommittedEvent","id":"OnResourceContentCommittedEvent","comment":"\nFired when a new revision of the resource is committed (e.g. user saves an\nedited version of the resource in the Developer Tools).\n","children":[{"ref":{"name":"Resource","refId":"chrome.devtools/Resource"},"isFinal":true,"kind":"variable","name":"resource","id":"resource","line":"117"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"content","id":"content","comment":"\nNew content of the resource.\n","line":"122"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Resource","refId":"chrome.devtools/Resource"},"initializedField":{"name":"resource","refId":"chrome.devtools/OnResourceContentCommittedEvent/resource"},"kind":"param","name":"resource","id":"resource"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"content","refId":"chrome.devtools/OnResourceContentCommittedEvent/content"},"kind":"param","name":"content","id":"content"}],"line":"124"}],"line":"116"},{"superclass":{"name":"ChromeApi","refId":"chrome.src.common_exp/ChromeApi"},"kind":"class","name":"ChromeDevtoolsInspectedWindow","id":"ChromeDevtoolsInspectedWindow","comment":"\nUse the `chrome.devtools.inspectedWindow` API to interact with the inspected\nwindow: obtain the tab ID for the inspected page, evaluate the code in the\ncontext of the inspected window, reload the page, or obtain the list of\nresources within the page.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"EvalResult","refId":"chrome.devtools/EvalResult"}]},"kind":"method","name":"eval","id":"eval1()","comment":"\nEvaluates a JavaScript expression in the context of the main frame of the\ninspected page. The expression must evaluate to a JSON-compliant object,\notherwise an exception is thrown.\n\n[expression] An expression to evaluate.\n\nReturns:\n[result] The result of evaluation.\n[isException] Set if an exception was caught while evaluating the\nexpression.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"expression","id":"expression"}],"line":"59"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reload","id":"reload1()","comment":"\nReloads the inspected page.\n","children":[{"ref":{"name":"DevtoolsInspectedWindowReloadParams","refId":"chrome.devtools/DevtoolsInspectedWindowReloadParams"},"isOptional":true,"kind":"param","name":"reloadOptions","id":"reloadOptions"}],"line":"70"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"Resource","refId":"chrome.devtools/Resource"}]}]},"kind":"method","name":"getResources","id":"getResources0()","comment":"\nRetrieves the list of resources from the inspected page.\n\nReturns:\nThe resources within the page.\n","line":"82"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_throwNotAvailable","id":"_throwNotAvailable0()","isPrivate":true,"line":"107"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"tabId","id":"tabId","comment":"\nThe ID of the tab being inspected. This ID may be used with chrome.tabs.*\nAPI.\n","line":"45"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Resource","refId":"chrome.devtools/Resource"}]},"kind":"property","name":"onResourceAdded","id":"onResourceAdded","comment":"\nFired when a new resource is added to the inspected page.\n","line":"93"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"OnResourceContentCommittedEvent","refId":"chrome.devtools/OnResourceContentCommittedEvent"}]},"kind":"property","name":"onResourceContentCommitted","id":"onResourceContentCommitted","comment":"\nFired when a new revision of the resource is committed (e.g. user saves an\nedited version of the resource in the Developer Tools).\n","line":"102"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_devtools_inspectedWindow","id":"_devtools_inspectedWindow","isPrivate":true,"line":"35"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"Resource","refId":"chrome.devtools/Resource"}]},"isFinal":true,"kind":"variable","name":"_onResourceAdded","id":"_onResourceAdded","isPrivate":true,"line":"95"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"OnResourceContentCommittedEvent","refId":"chrome.devtools/OnResourceContentCommittedEvent"}]},"isFinal":true,"kind":"variable","name":"_onResourceContentCommitted","id":"_onResourceContentCommitted","isPrivate":true,"line":"104"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"37"}],"line":"34"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"ChromeDevtools","id":"ChromeDevtools","children":[{"ref":{"name":"ChromeDevtoolsInspectedWindow","refId":"chrome.devtools/ChromeDevtoolsInspectedWindow"},"isFinal":true,"kind":"variable","name":"inspectedWindow","id":"inspectedWindow","comment":"\nAccessor for the `chrome.devtools.inspectedWindow` namespace.\n","line":"15"},{"ref":{"name":"ChromeDevtoolsNetwork","refId":"chrome.devtools/ChromeDevtoolsNetwork"},"isFinal":true,"kind":"variable","name":"network","id":"network","comment":"\nAccessor for the `chrome.devtools.network` namespace.\n","line":"20"},{"ref":{"name":"ChromeDevtoolsPanels","refId":"chrome.devtools/ChromeDevtoolsPanels"},"isFinal":true,"kind":"variable","name":"panels","id":"panels","comment":"\nAccessor for the `chrome.devtools.panels` namespace.\n","line":"25"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"10"}],"line":"9"}],"uri":"file:///home/ubuntu/src/github.com/dart-gde/chrome_gen.dart/lib/gen/devtools.dart","line":"3"}