{"dependencies":[{"kind":"library","id":"chrome.src.common_exp","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ChromeApi","id":"ChromeApi","comment":"\nA common super class for the Chrome APIs.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","comment":"\nReturns true if the API is available. The common causes of an API not being\navilable are:\n\n * a permission is missing in the application's manifest.json file\n * the API is defined on a newer version of Chrome then the current runtime\n","line":"40"}],"line":"32"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"ChromeObject","id":"ChromeObject","comment":"\nThe abstract superclass of objects that can hold [JsObject] proxies.\n","children":[{"returnType":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"method","name":"toJs","id":"toJs0()","line":"24"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"26"},{"isFinal":true,"kind":"variable","name":"jsProxy","id":"jsProxy","line":"10"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreate a new instance of a `ChromeObject`, which creates and delegates to\na JsObject proxy.\n","line":"16"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","comment":"\nCreate a new instance of a `ChromeObject`, which delegates to the given\nJsObject proxy.\n","children":[{"initializedField":{"name":"jsProxy","refId":"chrome.src.common_exp/ChromeObject/jsProxy"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"22"}],"line":"9"}],"uri":"file:///home/ubuntu/src/github.com/dart-gde/chrome_gen.dart/lib/src/common_exp.dart","line":"2"},{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","id":"chrome.extension","comment":"\nThe `chrome.extension` API has utilities that can be used by any extension\npage. It includes support for exchanging messages between an extension and\nits content scripts or between extensions, as described in detail in [Message\nPassing](messaging.html).\n","children":[{"returnType":{"name":"MessageSender","refId":"chrome.runtime/MessageSender"},"kind":"method","name":"_createMessageSender","id":"_createMessageSender1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"266"},{"returnType":{"name":"OnRequestExternalEvent","refId":"chrome.extension/OnRequestExternalEvent"},"kind":"method","name":"_createOnRequestExternalEvent","id":"_createOnRequestExternalEvent3()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"sender","id":"sender"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"sendResponse","id":"sendResponse"}],"isPrivate":true,"line":"264"},{"returnType":{"name":"OnRequestEvent","refId":"chrome.extension/OnRequestEvent"},"kind":"method","name":"_createOnRequestEvent","id":"_createOnRequestEvent3()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"sender","id":"sender"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"sendResponse","id":"sendResponse"}],"isPrivate":true,"line":"262"},{"returnType":{"name":"Window","refId":"chrome.windows/Window"},"kind":"method","name":"_createWindow","id":"_createWindow1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"261"},{"returnType":{"name":"LastErrorExtension","refId":"chrome.extension/LastErrorExtension"},"kind":"method","name":"_createLastErrorExtension","id":"_createLastErrorExtension1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"isPrivate":true,"line":"260"},{"ref":{"name":"ChromeExtension","refId":"chrome.extension/ChromeExtension"},"isFinal":true,"kind":"variable","name":"extension","id":"extension","comment":"\nAccessor for the `chrome.extension` namespace.\n","line":"18"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"ExtensionGetViewsParams","id":"ExtensionGetViewsParams","children":[{"isSetter":true,"kind":"method","name":"type=","id":"type=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"251"},{"isSetter":true,"kind":"method","name":"windowId=","id":"windowId=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"line":"257"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"type","id":"type","comment":"\nThe type of view to get. If omitted, returns all views (including\nbackground pages and tabs). Valid values: 'tab', 'infobar', 'notification',\n'popup'.\nenum of `tab`, `infobar`, `notification`, `popup`\n","line":"250"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"windowId","id":"windowId","comment":"\nThe window to restrict the search to. If omitted, returns all views.\n","line":"256"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"type","id":"type"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"isNamed":true,"kind":"param","name":"windowId","id":"windowId"}],"line":"238"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"242"}],"line":"237"},{"superclass":{"name":"ChromeObject","refId":"chrome.src.common_exp/ChromeObject"},"kind":"class","name":"LastErrorExtension","id":"LastErrorExtension","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"message","id":"message","comment":"\nDescription of the error that has taken place.\n","line":"234"},{"kind":"constructor","name":"","id":"0()","line":"228"},{"kind":"constructor","name":"fromProxy","id":"fromProxy1()","children":[{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"kind":"param","name":"jsProxy","id":"jsProxy"}],"line":"229"}],"line":"227"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"OnRequestExternalEvent","id":"OnRequestExternalEvent","comment":"\nDeprecated: please use onMessageExternal.\n","children":[{"isFinal":true,"kind":"variable","name":"request","id":"request","comment":"\nThe request sent by the calling script.\n`optional`\n\nThe request sent by the calling script.\n","line":"214"},{"ref":{"name":"MessageSender","refId":"chrome.runtime/MessageSender"},"isFinal":true,"kind":"variable","name":"sender","id":"sender","line":"216"},{"isFinal":true,"kind":"variable","name":"sendResponse","id":"sendResponse","comment":"\nFunction to call when you have a response. The argument should be any\nJSON-ifiable object, or undefined if there is no response.\n","line":"222"},{"kind":"constructor","name":"","id":"3()","children":[{"initializedField":{"name":"request","refId":"chrome.extension/OnRequestExternalEvent/request"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"MessageSender","refId":"chrome.runtime/MessageSender"},"initializedField":{"name":"sender","refId":"chrome.extension/OnRequestExternalEvent/sender"},"kind":"param","name":"sender","id":"sender"},{"initializedField":{"name":"sendResponse","refId":"chrome.extension/OnRequestExternalEvent/sendResponse"},"kind":"param","name":"sendResponse","id":"sendResponse"}],"line":"224"}],"line":"207"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"OnRequestEvent","id":"OnRequestEvent","comment":"\nDeprecated: please use onMessage.\n","children":[{"isFinal":true,"kind":"variable","name":"request","id":"request","comment":"\nThe request sent by the calling script.\n`optional`\n\nThe request sent by the calling script.\n","line":"189"},{"ref":{"name":"MessageSender","refId":"chrome.runtime/MessageSender"},"isFinal":true,"kind":"variable","name":"sender","id":"sender","line":"191"},{"isFinal":true,"kind":"variable","name":"sendResponse","id":"sendResponse","comment":"\nFunction to call (at most once) when you have a response. The argument\nshould be any JSON-ifiable object, or undefined if there is no response. If\nyou have more than one `onRequest` listener in the same document, then only\none may send a response.\n","line":"199"},{"kind":"constructor","name":"","id":"3()","children":[{"initializedField":{"name":"request","refId":"chrome.extension/OnRequestEvent/request"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"MessageSender","refId":"chrome.runtime/MessageSender"},"initializedField":{"name":"sender","refId":"chrome.extension/OnRequestEvent/sender"},"kind":"param","name":"sender","id":"sender"},{"initializedField":{"name":"sendResponse","refId":"chrome.extension/OnRequestEvent/sendResponse"},"kind":"param","name":"sendResponse","id":"sendResponse"}],"line":"201"}],"line":"182"},{"superclass":{"name":"ChromeApi","refId":"chrome.src.common_exp/ChromeApi"},"kind":"class","name":"ChromeExtension","id":"ChromeExtension","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[]},"kind":"method","name":"sendRequest","id":"sendRequest2()","comment":"\nDeprecated: Please use sendMessage.\n\n[extensionId] The extension ID of the extension you want to connect to. If\nomitted, default is your own extension.\n\nReturns:\nThe JSON response object sent by the handler of the request. If an error\noccurs while connecting to the extension, the callback will be called with\nno arguments and [runtime.lastError] will be set to the error message.\n","children":[{"kind":"param","name":"request","id":"request"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"extensionId","id":"extensionId"}],"line":"52"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getURL","id":"getURL1()","comment":"\nConverts a relative path within an extension install directory to a\nfully-qualified URL.\n\n[path] A path to a resource within an extension expressed relative to its\ninstall directory.\n\nReturns:\nThe fully-qualified URL to the resource.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"70"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Window","refId":"chrome.windows/Window"}]},"kind":"method","name":"getViews","id":"getViews1()","comment":"\nReturns an array of the JavaScript 'window' objects for each of the pages\nrunning inside the current extension.\n\nReturns:\nArray of global objects\n","children":[{"ref":{"name":"ExtensionGetViewsParams","refId":"chrome.extension/ExtensionGetViewsParams"},"isOptional":true,"kind":"param","name":"fetchProperties","id":"fetchProperties"}],"line":"83"},{"returnType":{"name":"Window","refId":"chrome.windows/Window"},"kind":"method","name":"getBackgroundPage","id":"getBackgroundPage0()","comment":"\nReturns the JavaScript 'window' object for the background page running\ninside the current extension. Returns null if the extension has no\nbackground page.\n","line":"95"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Window","refId":"chrome.windows/Window"}]},"kind":"method","name":"getExtensionTabs","id":"getExtensionTabs1()","comment":"\nDeprecated. Please use getViews({type: 'TAB'}). Returns an array of the\nJavaScript 'window' objects for each of the tabs running inside the current\nextension. If windowId is specified, returns only the 'window' objects of\ntabs attached to the specified window.\n\nReturns:\nArray of global window objects\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"windowId","id":"windowId"}],"line":"110"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"isAllowedIncognitoAccess","id":"isAllowedIncognitoAccess0()","comment":"\nRetrieves the state of the extension's access to Incognito-mode (as\ndetermined by the user-controlled 'Allowed in Incognito' checkbox.\n\nReturns:\nTrue if the extension has access to Incognito mode, false otherwise.\n","line":"124"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"isAllowedFileSchemeAccess","id":"isAllowedFileSchemeAccess0()","comment":"\nRetrieves the state of the extension's access to the 'file://' scheme (as\ndetermined by the user-controlled 'Allow access to File URLs' checkbox.\n\nReturns:\nTrue if the extension can access the 'file://' scheme, false otherwise.\n","line":"139"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setUpdateUrlData","id":"setUpdateUrlData1()","comment":"\nSets the value of the ap CGI parameter used in the extension's update URL.\nThis value is ignored for extensions that are hosted in the Chrome\nExtension Gallery.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"data","id":"data"}],"line":"152"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_throwNotAvailable","id":"_throwNotAvailable0()","isPrivate":true,"line":"174"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"available","id":"available","line":"25"},{"ref":{"name":"LastErrorExtension","refId":"chrome.extension/LastErrorExtension"},"kind":"property","name":"lastError","id":"lastError","comment":"\nSet for the lifetime of a callback if an ansychronous extension api has\nresulted in an error. If no error has occured lastError will be\n[undefined].\n","line":"32"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"inIncognitoContext","id":"inIncognitoContext","comment":"\nTrue for content scripts running inside incognito tabs, and for extension\npages running inside an incognito process. The latter only applies to\nextensions with 'split' incognito_behavior.\n","line":"39"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"OnRequestEvent","refId":"chrome.extension/OnRequestEvent"}]},"kind":"property","name":"onRequest","id":"onRequest","comment":"\nDeprecated: please use onMessage.\n","line":"161"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"OnRequestExternalEvent","refId":"chrome.extension/OnRequestExternalEvent"}]},"kind":"property","name":"onRequestExternal","id":"onRequestExternal","comment":"\nDeprecated: please use onMessageExternal.\n","line":"169"},{"ref":{"name":"JsObject","refId":"dart.js/JsObject"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_extension","id":"_extension","isPrivate":true,"line":"21"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"OnRequestEvent","refId":"chrome.extension/OnRequestEvent"}]},"isFinal":true,"kind":"variable","name":"_onRequest","id":"_onRequest","isPrivate":true,"line":"163"},{"ref":{"name":"ChromeStreamController","refId":"chrome.src.common/ChromeStreamController","arguments":[{"name":"OnRequestExternalEvent","refId":"chrome.extension/OnRequestExternalEvent"}]},"isFinal":true,"kind":"variable","name":"_onRequestExternal","id":"_onRequestExternal","isPrivate":true,"line":"171"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"23"}],"line":"20"}],"uri":"file:///home/ubuntu/src/github.com/dart-gde/chrome_gen.dart/lib/gen/extension.dart","line":"9"}